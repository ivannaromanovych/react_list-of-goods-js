{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_NAME","SORT_BY_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","sortedGoods","goods","preparedGoods","sort","a","b","localeCompare","length","reverse","getPreparedGoods","isListChanged","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,iBACfC,EAAiB,SAwBhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAzBR,SAA0BC,EAA1B,GAA4D,IAAzBL,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,UACtCI,EAAa,YAAOD,GAE1B,GAAIL,EACF,OAAQA,GACN,KAAKJ,EACHU,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC7C,MACF,KAAKZ,EACHS,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAUhD,OAJIT,GACFI,EAAcM,UAGTN,EAMaO,CAClBlB,EACA,CAAEK,YAAWE,cAOTY,EAA8B,KAAdd,GAAoBE,EAE1C,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAcJ,IAE9BsB,QAAS,kBAAMjB,EAAaL,IAP9B,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAcH,IAE9BqB,QAAS,kBAAMjB,EAAaJ,IAP9B,4BAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,IAEjBgB,QAAS,kBAAMf,GAAcD,IAP/B,qBAWCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAjDU,WAClBjB,EAAa,IACbE,GAAa,IA4CP,sBAUJ,6BACGC,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCzGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ad123021.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_NAME = 'alphabetically';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    switch (sortField) {\n      case SORT_BY_NAME:\n        preparedGoods.sort((a, b) => a.localeCompare(b));\n        break;\n      case SORT_BY_LENGTH:\n        preparedGoods.sort((a, b) => a.length - b.length);\n        break;\n      default: break;\n    }\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const sortedGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, isReverse },\n  );\n  const handleClick = () => {\n    setSortField('');\n    setIsReverse(false);\n  };\n\n  const isListChanged = sortField !== '' || isReverse;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_BY_NAME },\n          )}\n          onClick={() => setSortField(SORT_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n        {isListChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}